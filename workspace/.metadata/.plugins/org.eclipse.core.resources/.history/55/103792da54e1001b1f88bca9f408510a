package com.example;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.fnlp.nlp.cn.CNFactory;
import org.fnlp.util.exception.LoadModelException;

public class example {
	public static void main(String[] args) {
//        Tokenizer tokenizer = new Tokenizer() ;
//        List<Token> tokens = tokenizer.tokenize("１番のホールにあるボールを、２番、３番のホールへ順に移動させる。");
//        for (Token token : tokens) {
//            System.out.println(token.getSurface() + "\t" + token.getAllFeatures());
//        }
		try {
//			MorphologicalAnalysis ma = new MorphologicalAnalysis("ja", "4番のホールにあるボールを、3番、2番のホールへ順に移動させる。");
			MorphologicalAnalysis ma = new MorphologicalAnalysis("zh-CN", "第四洞的球依次移到第二洞和第三洞。");
			String cmd = ma.createCmd();
			System.out.println(cmd);
			
			String clientMessage="ja 4番のホールにあるボールを、3番、2番のホールへ順に移動させる。";
			String[] tmp = clientMessage.split(" ",1);
			System.out.println(tmp);
//			CNFactory factory = null;
//			// モデルファイルのパスを指定し、形態素解析器を呼び出す
//			try {
//			    factory = CNFactory.getInstance("./dic");
//			} catch (LoadModelException lme) {
//			    lme.printStackTrace();
//			}
//			String message = "今天天气真好啊！";
////			>> [今天, 天气, 真, 好, 啊, ！]
//			try {
//			    factory = CNFactory.getInstance("./dic");
//			} catch (LoadModelException lme) {
//			    lme.printStackTrace();
//			}
//			String[][] ctokens = factory.tag(message);
//			List<String> list =Arrays.asList(ctokens[0]);
//			ArrayList<String> newList=new ArrayList<>(list);
//			System.out.println(newList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
}